# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Generated by Django 3.1.2 on 2020-12-01 11:22

import django.db.models.deletion
from django.db import migrations, models

import cm.models


def create_component_prototype(apps, schema_editor):
    Prototype = apps.get_model('cm', 'Prototype')
    Component = apps.get_model('cm', 'Component')
    for comp in Component.objects.all():
        proto = Prototype(
            bundle=comp.prototype.bundle,
            type='component',
            parent=comp.prototype,
            path=comp.prototype.path,
            name=comp.name,
            display_name=comp.display_name,
            version=comp.prototype.version,
            constraint=comp.constraint,
            requires=comp.requires,
            adcm_min_version=comp.prototype.adcm_min_version,
            monitoring=comp.monitoring,
            description=comp.description,
        )
        proto.save()
        comp.comp_prototype = proto
        comp.save()


def fix_service_component(apps, schema_editor):
    ServiceComponent = apps.get_model('cm', 'ServiceComponent')
    for sc in ServiceComponent.objects.all():
        sc.prototype = sc.component.comp_prototype
        sc.save()


class Migration(migrations.Migration):

    dependencies = [
        ('cm', '0059_auto_20200904_0910'),
    ]

    operations = [
        migrations.AddField(
            model_name='clusterobject',
            name='service',
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to='cm.clusterobject',
            ),
        ),
        migrations.AddField(
            model_name='component',
            name='comp_prototype',
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='+',
                to='cm.prototype',
            ),
        ),
        migrations.AddField(
            model_name='prototype',
            name='constraint',
            field=models.JSONField(default=cm.models.get_default_constraint),
        ),
        migrations.AddField(
            model_name='prototype',
            name='parent',
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to='cm.prototype',
            ),
        ),
        migrations.AddField(
            model_name='prototype',
            name='requires',
            field=models.JSONField(default=list),
        ),
        migrations.AddField(
            model_name='servicecomponent',
            name='config',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='cm.objectconfig'),
        ),
        migrations.AddField(
            model_name='servicecomponent',
            name='issue',
            field=models.JSONField(default=dict),
        ),
        migrations.AddField(
            model_name='servicecomponent',
            name='prototype',
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to='cm.prototype',
            ),
        ),
        migrations.AddField(
            model_name='servicecomponent',
            name='stack',
            field=models.JSONField(default=list),
        ),
        migrations.AddField(
            model_name='servicecomponent',
            name='state',
            field=models.CharField(default='created', max_length=64),
        ),
        migrations.AddField(
            model_name='stageprototype',
            name='constraint',
            field=models.JSONField(default=cm.models.get_default_constraint),
        ),
        migrations.AddField(
            model_name='stageprototype',
            name='parent',
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to='cm.stageprototype',
            ),
        ),
        migrations.AddField(
            model_name='stageprototype',
            name='requires',
            field=models.JSONField(default=list),
        ),
        migrations.AlterField(
            model_name='prototype',
            name='type',
            field=models.CharField(
                choices=[
                    ('adcm', 'adcm'),
                    ('service', 'service'),
                    ('component', 'component'),
                    ('cluster', 'cluster'),
                    ('host', 'host'),
                    ('provider', 'provider'),
                ],
                max_length=16,
            ),
        ),
        migrations.AlterField(
            model_name='servicecomponent',
            name='component',
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to='cm.component',
            ),
        ),
        migrations.AlterField(
            model_name='stageprototype',
            name='type',
            field=models.CharField(
                choices=[
                    ('adcm', 'adcm'),
                    ('service', 'service'),
                    ('component', 'component'),
                    ('cluster', 'cluster'),
                    ('host', 'host'),
                    ('provider', 'provider'),
                ],
                max_length=16,
            ),
        ),
        migrations.AlterUniqueTogether(
            name='prototype',
            unique_together={('bundle', 'type', 'parent', 'name', 'version')},
        ),
        migrations.AlterUniqueTogether(
            name='stageprototype',
            unique_together={('type', 'parent', 'name', 'version')},
        ),
        migrations.RunPython(create_component_prototype),
        migrations.RunPython(fix_service_component),
    ]
